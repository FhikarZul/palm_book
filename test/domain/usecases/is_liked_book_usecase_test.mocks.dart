// Mocks generated by Mockito 5.4.5 from annotations
// in palm_book/test/domain/usecases/is_liked_book_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:palm_book/domain/entities/liked_book_entity.dart' as _i4;
import 'package:palm_book/domain/repositories/liked_book_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LikedBookRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLikedBookRepository extends _i1.Mock
    implements _i3.LikedBookRepository {
  MockLikedBookRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<String, List<_i4.LikedBookEntity>> getLikedBooks() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLikedBooks,
          [],
        ),
        returnValue: _FakeEither_0<String, List<_i4.LikedBookEntity>>(
          this,
          Invocation.method(
            #getLikedBooks,
            [],
          ),
        ),
      ) as _i2.Either<String, List<_i4.LikedBookEntity>>);

  @override
  _i2.Either<String, bool> saveLikedBook(_i4.LikedBookEntity? book) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLikedBook,
          [book],
        ),
        returnValue: _FakeEither_0<String, bool>(
          this,
          Invocation.method(
            #saveLikedBook,
            [book],
          ),
        ),
      ) as _i2.Either<String, bool>);

  @override
  _i2.Either<String, bool> deleteLikedBook(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteLikedBook,
          [id],
        ),
        returnValue: _FakeEither_0<String, bool>(
          this,
          Invocation.method(
            #deleteLikedBook,
            [id],
          ),
        ),
      ) as _i2.Either<String, bool>);

  @override
  _i2.Either<String, bool> checkIsLikedBook(int? id) => (super.noSuchMethod(
        Invocation.method(
          #checkIsLikedBook,
          [id],
        ),
        returnValue: _FakeEither_0<String, bool>(
          this,
          Invocation.method(
            #checkIsLikedBook,
            [id],
          ),
        ),
      ) as _i2.Either<String, bool>);
}
